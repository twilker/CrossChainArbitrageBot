<Window x:Class="CrossChainArbitrageBot.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CrossChainArbitrageBot"
        xmlns:viewModel="clr-namespace:CrossChainArbitrageBot.ViewModel"
        d:DataContext="{d:DesignInstance viewModel:WindowViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" Height="750" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Image Source="Images/bnb-logo.png" HorizontalAlignment="Center" 
               Grid.Row="0" Grid.Column="0" Width="100" Height="100"/>
        <Image Source="Images/avax-logo.png" HorizontalAlignment="Center"
               Grid.Row="0" Grid.Column="1" Width="100" Height="100"/>
        
        <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" FontSize="20" 
                   Margin="0,10,0,10"
                   Text="{Binding Spread, Converter={local:SpreadDirectionConverter}}"
                   HorizontalAlignment="Center"/>
        
        <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" FontSize="14"
                   HorizontalAlignment="Center"
                   Margin="0,0,0,10">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}Minimal Spread: {0:F2}% - Target Token Amount: {1:F2} ({2:F2}$) - Current Profit: {3:F2}$ - Gas Estimation: {4:F2}$">
                    <Binding Path="MinimalSpread"/>
                    <Binding Path="OptimalTokenAmount"/>
                    <Binding Path="OptimalTokenAmountPrice"/>
                    <Binding Path="CurrentProfit"/>
                    <Binding Path="GasEstimation"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        
        <DockPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                   VerticalAlignment="Center" Margin="10" HorizontalAlignment="Center">
            <TextBlock Text="{Binding ElementName=MinimalProfitSlider, Path=Value, UpdateSourceTrigger=PropertyChanged, StringFormat={}Minimal Profit: {0:F2}$}" DockPanel.Dock="Right" TextAlignment="Right" />
            <Slider Maximum="10" Minimum="1" TickPlacement="BottomRight" TickFrequency="1" IsSnapToTickEnabled="True" Name="MinimalProfitSlider" 
                    Value="{Binding MinimalProfit}"  Width="300" Margin="0,0,20,0"/>
        </DockPanel>
        
        <TextBlock Grid.Row="4" Grid.Column="0"
                   HorizontalAlignment="Center">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} Price: {1:F2}$">
                    <Binding Path="BscUnstableToken"/>
                    <Binding Path="BscUnstablePrice"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        <TextBlock Grid.Row="4" Grid.Column="1"
                   HorizontalAlignment="Center">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} Price: {1:F2}$">
                    <Binding Path="AvalancheUnstableToken"/>
                    <Binding Path="AvalancheUnstablePrice"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        
        <TextBlock Grid.Row="5" Grid.Column="0"
                   HorizontalAlignment="Center">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} Amount: {1:F3}">
                    <Binding Path="BscUnstableToken"/>
                    <Binding Path="BscUnstableAmount"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        <TextBlock Grid.Row="5" Grid.Column="1"
                   HorizontalAlignment="Center">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} Amount: {1:F3}">
                    <Binding Path="AvalancheUnstableToken"/>
                    <Binding Path="AvalancheUnstableAmount"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        
        <TextBlock Grid.Row="6" Grid.Column="0"
                   HorizontalAlignment="Center">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} Amount: {1:F2}">
                    <Binding Path="BscStableToken"/>
                    <Binding Path="BscStableAmount"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        <TextBlock Grid.Row="6" Grid.Column="1"
                   HorizontalAlignment="Center">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} Amount: {1:F2}">
                    <Binding Path="AvalancheStableToken"/>
                    <Binding Path="AvalancheStableAmount"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        
        <TextBlock Grid.Row="7" Grid.Column="0"
                   HorizontalAlignment="Center"
                   Text="{Binding BscAccountBalance, StringFormat={}BNB Amount: {0:F4}}"/>
        <TextBlock Grid.Row="7" Grid.Column="1"
                   HorizontalAlignment="Center"
                   Text="{Binding AvalancheAccountBalance, StringFormat={}AVAX Amount: {0:F4}}"/>
        
        <TextBlock Grid.Row="8" Grid.Column="0"
                   HorizontalAlignment="Center"
                   Text="{Binding BscNetWorth, StringFormat={}Net Worth: {0:F2}$}"/>
        <TextBlock Grid.Row="8" Grid.Column="1"
                   HorizontalAlignment="Center"
                   Text="{Binding AvalancheNetWorth, StringFormat={}Net Worth: {0:F2}$}"/>
        
        <TextBlock Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" FontSize="16" 
                   Margin="0,5,0,5"
                   Text="{Binding TotalNetWorth, StringFormat={}Total Net Worth: {0:F2}$}"
                   HorizontalAlignment="Center"/>
        
        <DockPanel Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="2"
            VerticalAlignment="Center" Margin="10" HorizontalAlignment="Center">
            <TextBox Text="{Binding ElementName=slValue, Path=Value, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Right" TextAlignment="Right" Width="40" />
            <Slider Maximum="100" TickPlacement="BottomRight" TickFrequency="1" IsSnapToTickEnabled="True" Name="slValue" 
                    Value="{Binding TransactionPercentage}"  Width="400" Margin="0,0,20,0"/>
        </DockPanel>

        <StackPanel Grid.Row="11" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding BscStableToUnstableCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} -> {1}">
                                <Binding Path="BscStableToken" />
                                <Binding Path="BscUnstableToken" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Button.Content>
            </Button>

            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding BscUnstableToStableCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} -> {1}">
                                <Binding Path="BscUnstableToken" />
                                <Binding Path="BscStableToken" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Button.Content>
            </Button>
        </StackPanel>
        
        <StackPanel Grid.Row="11" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding AvalancheStableToUnstableCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} -> {1}">
                                <Binding Path="AvalancheStableToken"/>
                                <Binding Path="AvalancheUnstableToken"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Button.Content>
            </Button>
        
            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding AvalancheUnstableToStableCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} -> {1}">
                                <Binding Path="AvalancheUnstableToken"/>
                                <Binding Path="AvalancheStableToken"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Button.Content>
            </Button>
        </StackPanel>

        <StackPanel Grid.Row="12" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding BscBridgeStableCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center" Text="{Binding BscStableToken, StringFormat={}Bridge {0}}" />
                </Button.Content>
            </Button>

            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding BscBridgeUnstableCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center"
                               Text="{Binding BscUnstableToken, StringFormat={}Bridge {0}}" />
                </Button.Content>
            </Button>
        </StackPanel>
        
        <StackPanel Grid.Row="12" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding AvalancheBridgeStableCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center">
                        <TextBlock HorizontalAlignment="Center" Text="{Binding AvalancheStableToken, StringFormat={}Bridge {0}}" />
                    </TextBlock>
                </Button.Content>
            </Button>
        
            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding AvalancheBridgeUnstableCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center" Text="{Binding AvalancheUnstableToken, StringFormat={}Bridge {0}}" />
                </Button.Content>
            </Button>
        </StackPanel>

        <StackPanel Grid.Row="13" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding BscStableToNativeCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center" Text="{Binding BscStableToken, StringFormat={}10 {0}$ -> BNB}" />
                </Button.Content>
            </Button>

            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding BscUnstableToNativeCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center"
                               Text="{Binding BscUnstableToken, StringFormat={}10 {0}$ -> BNB}" />
                </Button.Content>
            </Button>
        </StackPanel>

        <StackPanel Grid.Row="13" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding AvalancheStableToNativeCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center" Text="{Binding AvalancheStableToken, StringFormat={}10 {0}$ -> AVAX}" />
                </Button.Content>
            </Button>

            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding AvalancheUnstableToNativeCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center"
                               Text="{Binding AvalancheUnstableToken, StringFormat={}10 {0}$ -> AVAX}" />
                </Button.Content>
            </Button>
        </StackPanel>

        <StackPanel Grid.Row="14" Grid.Column="0" Grid.ColumnSpan="2"
                    Orientation="Horizontal" HorizontalAlignment="Center">
            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding SynchronizedTradeCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center" Text="Synchronized Trade" />
                </Button.Content>
            </Button>

            <Button HorizontalAlignment="Center" Margin="10"
                    Command="{Binding SingleLoopCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center"
                               Text="Loop Once" />
                </Button.Content>
            </Button>
            
            <Ellipse Margin="10"
                     Width="10"
                     Height="10"
                     Fill="{Binding LoopState, Converter={local:LoopStateTrafficLightConverter}}"/>

            <ToggleButton HorizontalAlignment="Center" Margin="10"
                          Command="{Binding AutoLoopCommand}"
                          IsChecked="{Binding IsLoopOnAuto, Mode=OneWay}">
                <ToggleButton.Content>
                    <TextBlock HorizontalAlignment="Center"
                               Text="Auto Loop" />
                </ToggleButton.Content>
            </ToggleButton>
        </StackPanel>
        
        <Border Grid.Row="15" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="1"
                BorderBrush="LightGray" Margin="5,0,5,5">
            <ScrollViewer VerticalScrollBarVisibility="Auto"
                          ScrollChanged="ImportantNoticeViewerOnScrollChanged"
                          x:Name="ImportantNoticeViewer">
                <ItemsControl ItemsSource="{Binding ImportantNotices}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="Border" BorderThickness="0,1,0,0" Padding="8 4 8 4"
                                    BorderBrush="LightGray">
                                <TextBox Text="{Binding Mode=OneWay}" TextWrapping="Wrap"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         IsReadOnly="True"/>
                            </Border>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=PreviousData}}"
                                             Value="{x:Null}">
                                    <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,0" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Border>
    </Grid>
</Window>
